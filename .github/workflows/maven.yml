# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file WhyNotGoCamp/pom.xml

    # 전송할 파일을 담을 디렉토리 생성
    - name: Make Directory for deliver
      run: mkdir deploy && cp WhyNotGoCamp/target/*.war deploy/ && cp WhyNotGoCamp/appspec.yml deploy/ && cp WhyNotGoCamp/scripts/deploy.sh deploy/

    # 압축
    - name: Make zip file
      run: zip -r -qq -j wngc-app.zip deploy

    # AWS 인증
    - name: AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region: ap-northeast-2

    # S3에 빌드된 파일 업로드
    - name: Upload to AWS S3
      run: aws s3 cp --region ap-northeast-2 wngc-app.zip s3://wngc-deploy/

    # Deploy
    - name: Code Deploy
      run: aws deploy create-deployment --application-name wngc-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name wngc-deploy-group --s3-location bucket=wngc-deploy,bundleType=zip,key=wngc-app.zip
